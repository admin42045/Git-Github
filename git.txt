    Magic
########## git & github ##########

git init    - create a local repository
git add .   - adding all files by this command
git status  - add a new file to your project, and it didn,t exist
git add -A  - adding all files
git add filename - add only one purticular file
git commit -m "Initial first commit"

// again file modifed
git status - checking the file staged after this command use
git add filename
or
git restore filename - to discard changes in working directory



git branch --set-upstream-to origin/master


// account setup
git config --global user.name "admin42045"
git config --global user.email "nitinkumar42045@gmail.com"
git config --list  - by this command print the id and username, which by we login in github account


// send to server
git remote add origin https://github.com/admin42045
git push -u origin master - adding files in github dir (it's not working then run below cmd)
or
git push -f origin master




// cloning a repository
git clone url

// How remove Reinitialized existing Git repository in   ../.git/
rm -fr .git

// When anybody do dance on the keyboard? or recovery all files
git checkout -f

// try when not pushing code
git pull --allow-unrelated-histories origin master
git push -u origin master

// working branch
git branch


// to create a new branch
git checkout -b newbranch


// switch between two branches

$ git checkout <existing_branch>
$ git checkout -b <new_branch>




########################################
        Some more addition command here
########################################

git stash  - stash local changes
git stash save "this is your custom message" - stash local changes with a custom message
git stash apply -  Re-apply the changes you saved in your latest stash
git stash apply stash@{stash_number} - Re-apply the changes you saved in a given stash stash_number
git stash drop stash@{0} - Drop any stash by its stash_number
git stash pop -  Apply the stash and then immediately drop it from your stack
git stash pop stash@{stash_number} - 'Release' a particular stash from your list of stashes
git stash list - List all stashes
git stash show - show the latest stash changes
git diff stash@{0} - see diff details of a given stash stash_number

git commit -m "commit message"  -  commit staged file(s)
git commit filename -m "commit message"  - add file and commit
git commit -am "insert commit message"  -  add file and commit staged files
git commit -amend "new commit message" -  amending a commit

git rebase -i  - squashing commits together(this will give you an interface on your core editor)
git reset --soft HEAD~Number_of_commits


############## branches ##########################
git checkout -b branchname  - create a local branch
git checkout -         - Switching between 2 branches (in fact, this would work on terminal as well to switch between 2 directories - $ cd -)
git push -u origin branchname - pushing local branch to remote
git branch -d branchname - Deleting a local branch - this won't let you delete a branch that hasn't been merged yet
git branch -D branchname - Deleting a local branch - this WILL delete a branch even if it hasn't been merged yet!
git remote prune origin - Remove any remote refs you have locally that have been removed from your remote (you can substitute to any remote branch)
git branch -a  - Viewing all branches, including local and remote branches
git branch -a --merged  - Viewing all branches that have been merged into your current branch, including local and remote
git branch -a --no-merged  - Viewing all branches that haven't been merged into your current branch, including local and remote
git branch  -  Viewing local branches
git branch -r  -  Viewing remote branches
git rebase origin/master  - Rebase master branch into local branch
git push origin +branchname Fetching and checking out remote branches  -  Pushing local branch after rebasing master into local branch
git fetch origin - This will fetch all the remote branches for you.
git checkout -b text origin/text  - With the remote branches in hand, you now need to check out the branch you are interested in, giving you a local working copy
git branch -rd origin/branchname  -  Deleting a remote branch

git checkout trunk/mater  -  Firt checkout trunk/mater
git merge branchname  - Now merge branch to trunk/master
 










